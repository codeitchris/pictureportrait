<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>images</title>
    <base href="/">
    <link rel="stylesheet" type="css"  href="style.css">
    <%- include("./partials/header.ejs") %>  
  </head>
  
  <body class = "homebody">
    <img src="/images/image.png">
    <div class="holder"> 
        <span class="icons twtr"><i class="fa fa-twitter"></i></span>
        <span class="icons dwld"><i class="fa fa-download"></i></span>
    </div>
    <p class = "explanation">Congrats, you have some obscure taste! Not really actually, just that at least 1 of your 
      top artists has not been been fine tuned yet. Not a massive surprised because I've only
      trained on the top X most popular artists. I'll continue to train the model, but 
      with limited resources it takes a long time. So don't be surprised if the people 
      in the image don't look quite right, because the model is simply guessing
      what that name means and has no strong association between the name and the 
      particular artist that it is refering too. 
    </p>
    <p class = "explanation">Regardless, the prompt used in the model was {prompt}. I'll 
      add your artists to a "to be trained" list. Come back next month and hopefull 
      you can get a better image. See you then! 
    </p>
    <script src="https://kit.fontawesome.com/9f4756e29e.js" crossorigin="anonymous">
          const twtr = document.querySelector(".twtr");
          const dwld = document.querySelector(".dwld");
          
          twtr.addEventListener("click", ()=>{
            const tweet = async () => {
                const filename = "image.png";
                async function k(){
                    try {
                        const mediaId = await twitterClient.v1.uploadMedia("./image.png");
                        await twitterClient.v2.tweet({
                            text: "Picture Portrait. made this. Nice {url}",
                            media: {
                                media_ids: [mediaId]
                            }
                        });
                    } catch (e) {
                        console.log(e)
                    }
                };
              }
             await k();
          })

          dwld.addEventListener("click", ()=>{
            let imgPath = img.getAttribute("src");
            let fileName = getFileName(imgPath);
            saveAs(imgPath,fileName);
          })
          function getFileName(str) {
            return str.substring(str,lastIndexOf('/')+1);
          }
    </script>
  </body>
  <%- include("./partials/footer.ejs") %>  
</html>